{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/InputField/InputField.module.css","components/App.module.css","redux/phonebook/phonebook-actions.js","components/Contact/Contact.jsx","redux/phonebook/phonebook-selectors.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/InputField/InputField.jsx","components/InputField/InputAttr.jsx","components/ContactForm/ContactForm.jsx","components/App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","payload","name","number","id","uuid","deleteContact","filterContacts","Contact","dispatch","useDispatch","className","styles","item","type","onClick","getFilter","state","contacts","filter","getFilteredContacts","items","getContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","list","map","length","contactsList","Filter","value","onChange","e","target","InputField","props","label","input","inputAttr","pattern","title","required","ContactForm","useState","setName","setNumber","reset","form","onSubmit","preventDefault","App","app","createReducer","action","some","alert","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","persistReducer","phonebookReducer","store","configureStore","reducer","devtools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bf2ba96c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__2pjLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__ES8RM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1jLbU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__32Tqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputField_input__3nq91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__20mEF\"};","import * as uuid from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contact/Add\", ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      name,\r\n      number,\r\n      id: uuid.v4(),\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction(\"contact/Delete\");\r\nexport const filterContacts = createAction(\"contact/Filter\");","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\r\nimport styles from \"./Contact.module.css\";\r\n\r\nconst Contact = ({ id, name, number }) => {\r\n  const dispatch = useDispatch();\r\n  const onDelete = () => dispatch(deleteContact(id));\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Contact;","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Contact from \"../Contact\";\r\nimport { getFilteredContacts } from \"../../redux/phonebook/phonebook-selectors\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n\r\n  const list = contacts?.map(({ id, name, number }) => (\r\n    <Contact key={id} name={name} number={number} id={id} />\r\n  ));\r\n  return contacts.length > 0 && <ul className={styles.contactsList}>{list}</ul>;\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\r\nimport { filterContacts } from \"../../redux/phonebook/phonebook-actions\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n  \r\n  const onChange = (e) => dispatch(filterContacts(e.target.value));\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.Filter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Filter;","import React from \"react\";\r\nimport styles from \"./InputField.module.css\";\r\n\r\nconst InputField = (props) => (\r\n  <label>\r\n    {props.label}\r\n    <input {...props} className={styles.input} />\r\n  </label>\r\n);\r\n\r\nexport default InputField;","const inputAttr = {\r\n    name: {\r\n      type: \"text\",\r\n      name: \"name\",\r\n      pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n      title:\r\n        \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n      required: true,\r\n      label: \"Name\",\r\n    },\r\n    number: {\r\n      type: \"text\",\r\n      name: \"number\",\r\n      pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\r\n      title:\r\n        \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n      required: true,\r\n      label: \"Number\",\r\n    },\r\n  };\r\n  \r\n  export default inputAttr;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport InputField from \"../InputField/InputField\";\r\nimport inputAttr from \"../InputField/InputAttr\";\r\nimport { addContact } from \"../../redux/phonebook/phonebook-actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) =>state.contacts.items)\r\n  \r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  //const isName = contacts.some(state => state.toLowerCase() === name.toLowerCase())\r\n  //if(isName){\r\n    //return alert(`${name} is already in contacts`);\r\n\r\n // }\r\n\r\n    dispatch(addContact({ name, number }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <InputField\r\n        {...inputAttr.name}\r\n        value={name}\r\n        onChange={handleNameChange}\r\n      />\r\n      <InputField\r\n        {...inputAttr.number}\r\n        value={number}\r\n        onChange={handleNumberChange}\r\n      />\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;","import ContactList from \"./ContactsList\";\nimport Filter from \"./Filter\";\nimport ContactForm from \"./ContactForm\";\nimport styles from \"./App.module.css\";\n\n\nfunction App() {\n\n  return (\n    <div className={styles.app}>\n      <h1>Phonebook</h1>\n      <ContactForm/>\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filterContacts } from \"./phonebook-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, action) => {\r\n    if (\r\n      state \r\n      .some(state => state.name.toLowerCase() === action.payload.name.toLowerCase())\r\n\r\n       /* .map((contact) => contact.name.toLowerCase())\r\n        .includes(action.payload.name.toLowerCase())*/\r\n    ) {\r\n      alert(`${action.payload.name} is already in contacts`);\r\n      return [...state];\r\n    }\r\n    return [...state, action.payload];\r\n  },\r\n  [deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, phonebookReducer),\r\n});\r\n// const persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devtools: process.env.NODE_ENV !== \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n</React.StrictMode>,\ndocument.getElementById(\"root\")\n);"],"sourceRoot":""}